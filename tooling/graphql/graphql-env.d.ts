/* eslint-disable */
/* prettier-ignore */

export type introspection_types = {
    'Boolean': unknown;
    'BooleanFilter': { kind: 'INPUT_OBJECT'; name: 'BooleanFilter'; isOneOf: false; inputFields: [{ name: 'isNull'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'equalTo'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'notEqualTo'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'distinctFrom'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'notDistinctFrom'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'in'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; }; defaultValue: null }, { name: 'notIn'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; }; defaultValue: null }, { name: 'lessThan'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'lessThanOrEqualTo'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'greaterThan'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'greaterThanOrEqualTo'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'ChangePasswordInput': { kind: 'INPUT_OBJECT'; name: 'ChangePasswordInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'oldPassword'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'newPassword'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'ChangePasswordPayload': { kind: 'OBJECT'; name: 'ChangePasswordPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'query': { name: 'query'; type: { kind: 'OBJECT'; name: 'Query'; ofType: null; } }; 'result': { name: 'result'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; }; };
    'ConfirmAccountDeletionInput': { kind: 'INPUT_OBJECT'; name: 'ConfirmAccountDeletionInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'token'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'ConfirmAccountDeletionPayload': { kind: 'OBJECT'; name: 'ConfirmAccountDeletionPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'query': { name: 'query'; type: { kind: 'OBJECT'; name: 'Query'; ofType: null; } }; 'result': { name: 'result'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; }; };
    'CreateUserEmailInput': { kind: 'INPUT_OBJECT'; name: 'CreateUserEmailInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'userEmail'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'UserEmailInput'; ofType: null; }; }; defaultValue: null }]; };
    'CreateUserEmailPayload': { kind: 'OBJECT'; name: 'CreateUserEmailPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'query': { name: 'query'; type: { kind: 'OBJECT'; name: 'Query'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; 'userEmail': { name: 'userEmail'; type: { kind: 'OBJECT'; name: 'UserEmail'; ofType: null; } }; 'userEmailEdge': { name: 'userEmailEdge'; type: { kind: 'OBJECT'; name: 'UserEmailEdge'; ofType: null; } }; }; };
    'CreateVideoInput': { kind: 'INPUT_OBJECT'; name: 'CreateVideoInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'video'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'VideoInput'; ofType: null; }; }; defaultValue: null }]; };
    'CreateVideoPayload': { kind: 'OBJECT'; name: 'CreateVideoPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'query': { name: 'query'; type: { kind: 'OBJECT'; name: 'Query'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; 'video': { name: 'video'; type: { kind: 'OBJECT'; name: 'Video'; ofType: null; } }; 'videoEdge': { name: 'videoEdge'; type: { kind: 'OBJECT'; name: 'VideoEdge'; ofType: null; } }; }; };
    'Cursor': unknown;
    'Datetime': unknown;
    'DatetimeFilter': { kind: 'INPUT_OBJECT'; name: 'DatetimeFilter'; isOneOf: false; inputFields: [{ name: 'isNull'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'equalTo'; type: { kind: 'SCALAR'; name: 'Datetime'; ofType: null; }; defaultValue: null }, { name: 'notEqualTo'; type: { kind: 'SCALAR'; name: 'Datetime'; ofType: null; }; defaultValue: null }, { name: 'distinctFrom'; type: { kind: 'SCALAR'; name: 'Datetime'; ofType: null; }; defaultValue: null }, { name: 'notDistinctFrom'; type: { kind: 'SCALAR'; name: 'Datetime'; ofType: null; }; defaultValue: null }, { name: 'in'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Datetime'; ofType: null; }; }; }; defaultValue: null }, { name: 'notIn'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Datetime'; ofType: null; }; }; }; defaultValue: null }, { name: 'lessThan'; type: { kind: 'SCALAR'; name: 'Datetime'; ofType: null; }; defaultValue: null }, { name: 'lessThanOrEqualTo'; type: { kind: 'SCALAR'; name: 'Datetime'; ofType: null; }; defaultValue: null }, { name: 'greaterThan'; type: { kind: 'SCALAR'; name: 'Datetime'; ofType: null; }; defaultValue: null }, { name: 'greaterThanOrEqualTo'; type: { kind: 'SCALAR'; name: 'Datetime'; ofType: null; }; defaultValue: null }]; };
    'DeleteUserAuthenticationByNodeIdInput': { kind: 'INPUT_OBJECT'; name: 'DeleteUserAuthenticationByNodeIdInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'nodeId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'DeleteUserAuthenticationByServiceAndIdentifierInput': { kind: 'INPUT_OBJECT'; name: 'DeleteUserAuthenticationByServiceAndIdentifierInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'service'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'identifier'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'DeleteUserAuthenticationInput': { kind: 'INPUT_OBJECT'; name: 'DeleteUserAuthenticationInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UUID'; ofType: null; }; }; defaultValue: null }]; };
    'DeleteUserAuthenticationPayload': { kind: 'OBJECT'; name: 'DeleteUserAuthenticationPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'deletedUserAuthenticationNodeId': { name: 'deletedUserAuthenticationNodeId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'query': { name: 'query'; type: { kind: 'OBJECT'; name: 'Query'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; 'userAuthentication': { name: 'userAuthentication'; type: { kind: 'OBJECT'; name: 'UserAuthentication'; ofType: null; } }; 'userAuthenticationEdge': { name: 'userAuthenticationEdge'; type: { kind: 'OBJECT'; name: 'UserAuthenticationEdge'; ofType: null; } }; }; };
    'DeleteUserEmailByNodeIdInput': { kind: 'INPUT_OBJECT'; name: 'DeleteUserEmailByNodeIdInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'nodeId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'DeleteUserEmailByUserIdAndEmailInput': { kind: 'INPUT_OBJECT'; name: 'DeleteUserEmailByUserIdAndEmailInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'userId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UUID'; ofType: null; }; }; defaultValue: null }, { name: 'email'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'DeleteUserEmailInput': { kind: 'INPUT_OBJECT'; name: 'DeleteUserEmailInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UUID'; ofType: null; }; }; defaultValue: null }]; };
    'DeleteUserEmailPayload': { kind: 'OBJECT'; name: 'DeleteUserEmailPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'deletedUserEmailNodeId': { name: 'deletedUserEmailNodeId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'query': { name: 'query'; type: { kind: 'OBJECT'; name: 'Query'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; 'userEmail': { name: 'userEmail'; type: { kind: 'OBJECT'; name: 'UserEmail'; ofType: null; } }; 'userEmailEdge': { name: 'userEmailEdge'; type: { kind: 'OBJECT'; name: 'UserEmailEdge'; ofType: null; } }; }; };
    'ForgotPasswordInput': { kind: 'INPUT_OBJECT'; name: 'ForgotPasswordInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'email'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'ForgotPasswordPayload': { kind: 'OBJECT'; name: 'ForgotPasswordPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'query': { name: 'query'; type: { kind: 'OBJECT'; name: 'Query'; ofType: null; } }; }; };
    'GenerateVideoPresignedPostInput': { kind: 'INPUT_OBJECT'; name: 'GenerateVideoPresignedPostInput'; isOneOf: false; inputFields: [{ name: 'key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'GenerateVideoPresignedPostPayload': { kind: 'OBJECT'; name: 'GenerateVideoPresignedPostPayload'; fields: { 'fields': { name: 'fields'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'url': { name: 'url'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'GetVideoUrlInput': { kind: 'INPUT_OBJECT'; name: 'GetVideoUrlInput'; isOneOf: false; inputFields: [{ name: 'videoId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'GetVideoUrlPayload': { kind: 'OBJECT'; name: 'GetVideoUrlPayload'; fields: { 'url': { name: 'url'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ID': unknown;
    'Int': unknown;
    'JSON': unknown;
    'JSONFilter': { kind: 'INPUT_OBJECT'; name: 'JSONFilter'; isOneOf: false; inputFields: [{ name: 'isNull'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'equalTo'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; }; defaultValue: null }, { name: 'notEqualTo'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; }; defaultValue: null }, { name: 'distinctFrom'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; }; defaultValue: null }, { name: 'notDistinctFrom'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; }; defaultValue: null }, { name: 'in'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'JSON'; ofType: null; }; }; }; defaultValue: null }, { name: 'notIn'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'JSON'; ofType: null; }; }; }; defaultValue: null }, { name: 'lessThan'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; }; defaultValue: null }, { name: 'lessThanOrEqualTo'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; }; defaultValue: null }, { name: 'greaterThan'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; }; defaultValue: null }, { name: 'greaterThanOrEqualTo'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; }; defaultValue: null }, { name: 'contains'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; }; defaultValue: null }, { name: 'containsKey'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'containsAllKeys'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'containsAnyKeys'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'containedBy'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; }; defaultValue: null }]; };
    'LoginInput': { kind: 'INPUT_OBJECT'; name: 'LoginInput'; isOneOf: false; inputFields: [{ name: 'username'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'password'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'LoginPayload': { kind: 'OBJECT'; name: 'LoginPayload'; fields: { 'accessToken': { name: 'accessToken'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'refreshToken': { name: 'refreshToken'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; }; };
    'LogoutPayload': { kind: 'OBJECT'; name: 'LogoutPayload'; fields: { 'success': { name: 'success'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; }; };
    'Mutation': { kind: 'OBJECT'; name: 'Mutation'; fields: { 'changePassword': { name: 'changePassword'; type: { kind: 'OBJECT'; name: 'ChangePasswordPayload'; ofType: null; } }; 'confirmAccountDeletion': { name: 'confirmAccountDeletion'; type: { kind: 'OBJECT'; name: 'ConfirmAccountDeletionPayload'; ofType: null; } }; 'createUserEmail': { name: 'createUserEmail'; type: { kind: 'OBJECT'; name: 'CreateUserEmailPayload'; ofType: null; } }; 'createVideo': { name: 'createVideo'; type: { kind: 'OBJECT'; name: 'CreateVideoPayload'; ofType: null; } }; 'deleteUserAuthentication': { name: 'deleteUserAuthentication'; type: { kind: 'OBJECT'; name: 'DeleteUserAuthenticationPayload'; ofType: null; } }; 'deleteUserAuthenticationByNodeId': { name: 'deleteUserAuthenticationByNodeId'; type: { kind: 'OBJECT'; name: 'DeleteUserAuthenticationPayload'; ofType: null; } }; 'deleteUserAuthenticationByServiceAndIdentifier': { name: 'deleteUserAuthenticationByServiceAndIdentifier'; type: { kind: 'OBJECT'; name: 'DeleteUserAuthenticationPayload'; ofType: null; } }; 'deleteUserEmail': { name: 'deleteUserEmail'; type: { kind: 'OBJECT'; name: 'DeleteUserEmailPayload'; ofType: null; } }; 'deleteUserEmailByNodeId': { name: 'deleteUserEmailByNodeId'; type: { kind: 'OBJECT'; name: 'DeleteUserEmailPayload'; ofType: null; } }; 'deleteUserEmailByUserIdAndEmail': { name: 'deleteUserEmailByUserIdAndEmail'; type: { kind: 'OBJECT'; name: 'DeleteUserEmailPayload'; ofType: null; } }; 'forgotPassword': { name: 'forgotPassword'; type: { kind: 'OBJECT'; name: 'ForgotPasswordPayload'; ofType: null; } }; 'generateVideoPresignedPost': { name: 'generateVideoPresignedPost'; type: { kind: 'OBJECT'; name: 'GenerateVideoPresignedPostPayload'; ofType: null; } }; 'getVideoUrl': { name: 'getVideoUrl'; type: { kind: 'OBJECT'; name: 'GetVideoUrlPayload'; ofType: null; } }; 'login': { name: 'login'; type: { kind: 'OBJECT'; name: 'LoginPayload'; ofType: null; } }; 'logout': { name: 'logout'; type: { kind: 'OBJECT'; name: 'LogoutPayload'; ofType: null; } }; 'register': { name: 'register'; type: { kind: 'OBJECT'; name: 'RegisterPayload'; ofType: null; } }; 'requestAccountDeletion': { name: 'requestAccountDeletion'; type: { kind: 'OBJECT'; name: 'RequestAccountDeletionPayload'; ofType: null; } }; 'resetPassword': { name: 'resetPassword'; type: { kind: 'OBJECT'; name: 'ResetPasswordPayload'; ofType: null; } }; 'updateUser': { name: 'updateUser'; type: { kind: 'OBJECT'; name: 'UpdateUserPayload'; ofType: null; } }; 'updateUserByNodeId': { name: 'updateUserByNodeId'; type: { kind: 'OBJECT'; name: 'UpdateUserPayload'; ofType: null; } }; 'updateUserByUsername': { name: 'updateUserByUsername'; type: { kind: 'OBJECT'; name: 'UpdateUserPayload'; ofType: null; } }; 'updateVideo': { name: 'updateVideo'; type: { kind: 'OBJECT'; name: 'UpdateVideoPayload'; ofType: null; } }; 'updateVideoByNodeId': { name: 'updateVideoByNodeId'; type: { kind: 'OBJECT'; name: 'UpdateVideoPayload'; ofType: null; } }; 'verifyEmail': { name: 'verifyEmail'; type: { kind: 'OBJECT'; name: 'VerifyEmailPayload'; ofType: null; } }; }; };
    'Node': { kind: 'INTERFACE'; name: 'Node'; fields: { 'nodeId': { name: 'nodeId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; }; possibleTypes: 'Query' | 'User' | 'UserAuthentication' | 'UserEmail' | 'Video'; };
    'PageInfo': { kind: 'OBJECT'; name: 'PageInfo'; fields: { 'endCursor': { name: 'endCursor'; type: { kind: 'SCALAR'; name: 'Cursor'; ofType: null; } }; 'hasNextPage': { name: 'hasNextPage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'hasPreviousPage': { name: 'hasPreviousPage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'startCursor': { name: 'startCursor'; type: { kind: 'SCALAR'; name: 'Cursor'; ofType: null; } }; }; };
    'Query': { kind: 'OBJECT'; name: 'Query'; fields: { 'currentSessionId': { name: 'currentSessionId'; type: { kind: 'SCALAR'; name: 'UUID'; ofType: null; } }; 'currentUser': { name: 'currentUser'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; 'currentUserId': { name: 'currentUserId'; type: { kind: 'SCALAR'; name: 'UUID'; ofType: null; } }; 'node': { name: 'node'; type: { kind: 'INTERFACE'; name: 'Node'; ofType: null; } }; 'nodeId': { name: 'nodeId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'query': { name: 'query'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Query'; ofType: null; }; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; 'userAuthentication': { name: 'userAuthentication'; type: { kind: 'OBJECT'; name: 'UserAuthentication'; ofType: null; } }; 'userAuthenticationByNodeId': { name: 'userAuthenticationByNodeId'; type: { kind: 'OBJECT'; name: 'UserAuthentication'; ofType: null; } }; 'userAuthenticationByServiceAndIdentifier': { name: 'userAuthenticationByServiceAndIdentifier'; type: { kind: 'OBJECT'; name: 'UserAuthentication'; ofType: null; } }; 'userAuthentications': { name: 'userAuthentications'; type: { kind: 'OBJECT'; name: 'UserAuthenticationConnection'; ofType: null; } }; 'userByNodeId': { name: 'userByNodeId'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; 'userByUsername': { name: 'userByUsername'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; 'userEmail': { name: 'userEmail'; type: { kind: 'OBJECT'; name: 'UserEmail'; ofType: null; } }; 'userEmailByNodeId': { name: 'userEmailByNodeId'; type: { kind: 'OBJECT'; name: 'UserEmail'; ofType: null; } }; 'userEmailByUserIdAndEmail': { name: 'userEmailByUserIdAndEmail'; type: { kind: 'OBJECT'; name: 'UserEmail'; ofType: null; } }; 'userEmails': { name: 'userEmails'; type: { kind: 'OBJECT'; name: 'UserEmailConnection'; ofType: null; } }; 'users': { name: 'users'; type: { kind: 'OBJECT'; name: 'UserConnection'; ofType: null; } }; 'video': { name: 'video'; type: { kind: 'OBJECT'; name: 'Video'; ofType: null; } }; 'videoByNodeId': { name: 'videoByNodeId'; type: { kind: 'OBJECT'; name: 'Video'; ofType: null; } }; 'videos': { name: 'videos'; type: { kind: 'OBJECT'; name: 'VideoConnection'; ofType: null; } }; }; };
    'RegisterInput': { kind: 'INPUT_OBJECT'; name: 'RegisterInput'; isOneOf: false; inputFields: [{ name: 'username'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'email'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'password'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'avatarUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'RegisterPayload': { kind: 'OBJECT'; name: 'RegisterPayload'; fields: { 'accessToken': { name: 'accessToken'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'refreshToken': { name: 'refreshToken'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'User'; ofType: null; }; } }; }; };
    'RequestAccountDeletionInput': { kind: 'INPUT_OBJECT'; name: 'RequestAccountDeletionInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'RequestAccountDeletionPayload': { kind: 'OBJECT'; name: 'RequestAccountDeletionPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'query': { name: 'query'; type: { kind: 'OBJECT'; name: 'Query'; ofType: null; } }; 'result': { name: 'result'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; }; };
    'ResetPasswordInput': { kind: 'INPUT_OBJECT'; name: 'ResetPasswordInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'userId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UUID'; ofType: null; }; }; defaultValue: null }, { name: 'resetToken'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'newPassword'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'ResetPasswordPayload': { kind: 'OBJECT'; name: 'ResetPasswordPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'query': { name: 'query'; type: { kind: 'OBJECT'; name: 'Query'; ofType: null; } }; 'success': { name: 'success'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; }; };
    'String': unknown;
    'StringFilter': { kind: 'INPUT_OBJECT'; name: 'StringFilter'; isOneOf: false; inputFields: [{ name: 'isNull'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'equalTo'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'notEqualTo'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'distinctFrom'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'notDistinctFrom'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'in'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'notIn'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'lessThan'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'lessThanOrEqualTo'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'greaterThan'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'greaterThanOrEqualTo'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'includes'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'notIncludes'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'includesInsensitive'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'notIncludesInsensitive'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'startsWith'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'notStartsWith'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'startsWithInsensitive'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'notStartsWithInsensitive'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'endsWith'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'notEndsWith'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'endsWithInsensitive'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'notEndsWithInsensitive'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'like'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'notLike'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'likeInsensitive'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'notLikeInsensitive'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'equalToInsensitive'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'notEqualToInsensitive'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'distinctFromInsensitive'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'notDistinctFromInsensitive'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'inInsensitive'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'notInInsensitive'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'lessThanInsensitive'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'lessThanOrEqualToInsensitive'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'greaterThanInsensitive'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'greaterThanOrEqualToInsensitive'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'UUID': unknown;
    'UUIDFilter': { kind: 'INPUT_OBJECT'; name: 'UUIDFilter'; isOneOf: false; inputFields: [{ name: 'isNull'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'equalTo'; type: { kind: 'SCALAR'; name: 'UUID'; ofType: null; }; defaultValue: null }, { name: 'notEqualTo'; type: { kind: 'SCALAR'; name: 'UUID'; ofType: null; }; defaultValue: null }, { name: 'distinctFrom'; type: { kind: 'SCALAR'; name: 'UUID'; ofType: null; }; defaultValue: null }, { name: 'notDistinctFrom'; type: { kind: 'SCALAR'; name: 'UUID'; ofType: null; }; defaultValue: null }, { name: 'in'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UUID'; ofType: null; }; }; }; defaultValue: null }, { name: 'notIn'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UUID'; ofType: null; }; }; }; defaultValue: null }, { name: 'lessThan'; type: { kind: 'SCALAR'; name: 'UUID'; ofType: null; }; defaultValue: null }, { name: 'lessThanOrEqualTo'; type: { kind: 'SCALAR'; name: 'UUID'; ofType: null; }; defaultValue: null }, { name: 'greaterThan'; type: { kind: 'SCALAR'; name: 'UUID'; ofType: null; }; defaultValue: null }, { name: 'greaterThanOrEqualTo'; type: { kind: 'SCALAR'; name: 'UUID'; ofType: null; }; defaultValue: null }]; };
    'UpdateUserByNodeIdInput': { kind: 'INPUT_OBJECT'; name: 'UpdateUserByNodeIdInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'nodeId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'patch'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'UserPatch'; ofType: null; }; }; defaultValue: null }]; };
    'UpdateUserByUsernameInput': { kind: 'INPUT_OBJECT'; name: 'UpdateUserByUsernameInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'username'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'patch'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'UserPatch'; ofType: null; }; }; defaultValue: null }]; };
    'UpdateUserInput': { kind: 'INPUT_OBJECT'; name: 'UpdateUserInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UUID'; ofType: null; }; }; defaultValue: null }, { name: 'patch'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'UserPatch'; ofType: null; }; }; defaultValue: null }]; };
    'UpdateUserPayload': { kind: 'OBJECT'; name: 'UpdateUserPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'query': { name: 'query'; type: { kind: 'OBJECT'; name: 'Query'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; 'userEdge': { name: 'userEdge'; type: { kind: 'OBJECT'; name: 'UserEdge'; ofType: null; } }; }; };
    'UpdateVideoByNodeIdInput': { kind: 'INPUT_OBJECT'; name: 'UpdateVideoByNodeIdInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'nodeId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'patch'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'VideoPatch'; ofType: null; }; }; defaultValue: null }]; };
    'UpdateVideoInput': { kind: 'INPUT_OBJECT'; name: 'UpdateVideoInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UUID'; ofType: null; }; }; defaultValue: null }, { name: 'patch'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'VideoPatch'; ofType: null; }; }; defaultValue: null }]; };
    'UpdateVideoPayload': { kind: 'OBJECT'; name: 'UpdateVideoPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'query': { name: 'query'; type: { kind: 'OBJECT'; name: 'Query'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; 'video': { name: 'video'; type: { kind: 'OBJECT'; name: 'Video'; ofType: null; } }; 'videoEdge': { name: 'videoEdge'; type: { kind: 'OBJECT'; name: 'VideoEdge'; ofType: null; } }; }; };
    'User': { kind: 'OBJECT'; name: 'User'; fields: { 'avatarUrl': { name: 'avatarUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Datetime'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UUID'; ofType: null; }; } }; 'isAdmin': { name: 'isAdmin'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'isVerified': { name: 'isVerified'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'nodeId': { name: 'nodeId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Datetime'; ofType: null; }; } }; 'userAuthentications': { name: 'userAuthentications'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserAuthenticationConnection'; ofType: null; }; } }; 'userEmails': { name: 'userEmails'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserEmailConnection'; ofType: null; }; } }; 'username': { name: 'username'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'videos': { name: 'videos'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'VideoConnection'; ofType: null; }; } }; }; };
    'UserAuthentication': { kind: 'OBJECT'; name: 'UserAuthentication'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Datetime'; ofType: null; }; } }; 'details': { name: 'details'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'JSON'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UUID'; ofType: null; }; } }; 'identifier': { name: 'identifier'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'nodeId': { name: 'nodeId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'service': { name: 'service'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Datetime'; ofType: null; }; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; 'userId': { name: 'userId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UUID'; ofType: null; }; } }; }; };
    'UserAuthenticationCondition': { kind: 'INPUT_OBJECT'; name: 'UserAuthenticationCondition'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'UUID'; ofType: null; }; defaultValue: null }, { name: 'userId'; type: { kind: 'SCALAR'; name: 'UUID'; ofType: null; }; defaultValue: null }, { name: 'service'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'UserAuthenticationConnection': { kind: 'OBJECT'; name: 'UserAuthenticationConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'UserAuthenticationEdge'; ofType: null; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'UserAuthentication'; ofType: null; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'UserAuthenticationEdge': { kind: 'OBJECT'; name: 'UserAuthenticationEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'SCALAR'; name: 'Cursor'; ofType: null; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'UserAuthentication'; ofType: null; } }; }; };
    'UserAuthenticationFilter': { kind: 'INPUT_OBJECT'; name: 'UserAuthenticationFilter'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'INPUT_OBJECT'; name: 'UUIDFilter'; ofType: null; }; defaultValue: null }, { name: 'userId'; type: { kind: 'INPUT_OBJECT'; name: 'UUIDFilter'; ofType: null; }; defaultValue: null }, { name: 'service'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'identifier'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'details'; type: { kind: 'INPUT_OBJECT'; name: 'JSONFilter'; ofType: null; }; defaultValue: null }, { name: 'createdAt'; type: { kind: 'INPUT_OBJECT'; name: 'DatetimeFilter'; ofType: null; }; defaultValue: null }, { name: 'updatedAt'; type: { kind: 'INPUT_OBJECT'; name: 'DatetimeFilter'; ofType: null; }; defaultValue: null }, { name: 'user'; type: { kind: 'INPUT_OBJECT'; name: 'UserFilter'; ofType: null; }; defaultValue: null }, { name: 'and'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'UserAuthenticationFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'or'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'UserAuthenticationFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'not'; type: { kind: 'INPUT_OBJECT'; name: 'UserAuthenticationFilter'; ofType: null; }; defaultValue: null }]; };
    'UserAuthenticationOrderBy': { name: 'UserAuthenticationOrderBy'; enumValues: 'NATURAL' | 'PRIMARY_KEY_ASC' | 'PRIMARY_KEY_DESC' | 'ID_ASC' | 'ID_DESC' | 'USER_ID_ASC' | 'USER_ID_DESC' | 'SERVICE_ASC' | 'SERVICE_DESC'; };
    'UserCondition': { kind: 'INPUT_OBJECT'; name: 'UserCondition'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'UUID'; ofType: null; }; defaultValue: null }, { name: 'username'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'UserConnection': { kind: 'OBJECT'; name: 'UserConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'UserEdge'; ofType: null; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'User'; ofType: null; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'UserEdge': { kind: 'OBJECT'; name: 'UserEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'SCALAR'; name: 'Cursor'; ofType: null; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; }; };
    'UserEmail': { kind: 'OBJECT'; name: 'UserEmail'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Datetime'; ofType: null; }; } }; 'email': { name: 'email'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UUID'; ofType: null; }; } }; 'isPrimary': { name: 'isPrimary'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'isVerified': { name: 'isVerified'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'nodeId': { name: 'nodeId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Datetime'; ofType: null; }; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; 'userId': { name: 'userId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UUID'; ofType: null; }; } }; }; };
    'UserEmailCondition': { kind: 'INPUT_OBJECT'; name: 'UserEmailCondition'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'UUID'; ofType: null; }; defaultValue: null }, { name: 'userId'; type: { kind: 'SCALAR'; name: 'UUID'; ofType: null; }; defaultValue: null }, { name: 'isPrimary'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'UserEmailConnection': { kind: 'OBJECT'; name: 'UserEmailConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'UserEmailEdge'; ofType: null; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'UserEmail'; ofType: null; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'UserEmailEdge': { kind: 'OBJECT'; name: 'UserEmailEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'SCALAR'; name: 'Cursor'; ofType: null; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'UserEmail'; ofType: null; } }; }; };
    'UserEmailFilter': { kind: 'INPUT_OBJECT'; name: 'UserEmailFilter'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'INPUT_OBJECT'; name: 'UUIDFilter'; ofType: null; }; defaultValue: null }, { name: 'userId'; type: { kind: 'INPUT_OBJECT'; name: 'UUIDFilter'; ofType: null; }; defaultValue: null }, { name: 'email'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'isVerified'; type: { kind: 'INPUT_OBJECT'; name: 'BooleanFilter'; ofType: null; }; defaultValue: null }, { name: 'isPrimary'; type: { kind: 'INPUT_OBJECT'; name: 'BooleanFilter'; ofType: null; }; defaultValue: null }, { name: 'createdAt'; type: { kind: 'INPUT_OBJECT'; name: 'DatetimeFilter'; ofType: null; }; defaultValue: null }, { name: 'updatedAt'; type: { kind: 'INPUT_OBJECT'; name: 'DatetimeFilter'; ofType: null; }; defaultValue: null }, { name: 'user'; type: { kind: 'INPUT_OBJECT'; name: 'UserFilter'; ofType: null; }; defaultValue: null }, { name: 'and'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'UserEmailFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'or'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'UserEmailFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'not'; type: { kind: 'INPUT_OBJECT'; name: 'UserEmailFilter'; ofType: null; }; defaultValue: null }]; };
    'UserEmailInput': { kind: 'INPUT_OBJECT'; name: 'UserEmailInput'; isOneOf: false; inputFields: [{ name: 'email'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'UserEmailOrderBy': { name: 'UserEmailOrderBy'; enumValues: 'NATURAL' | 'PRIMARY_KEY_ASC' | 'PRIMARY_KEY_DESC' | 'ID_ASC' | 'ID_DESC' | 'USER_ID_ASC' | 'USER_ID_DESC' | 'IS_PRIMARY_ASC' | 'IS_PRIMARY_DESC'; };
    'UserFilter': { kind: 'INPUT_OBJECT'; name: 'UserFilter'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'INPUT_OBJECT'; name: 'UUIDFilter'; ofType: null; }; defaultValue: null }, { name: 'username'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'avatarUrl'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'isAdmin'; type: { kind: 'INPUT_OBJECT'; name: 'BooleanFilter'; ofType: null; }; defaultValue: null }, { name: 'isVerified'; type: { kind: 'INPUT_OBJECT'; name: 'BooleanFilter'; ofType: null; }; defaultValue: null }, { name: 'createdAt'; type: { kind: 'INPUT_OBJECT'; name: 'DatetimeFilter'; ofType: null; }; defaultValue: null }, { name: 'updatedAt'; type: { kind: 'INPUT_OBJECT'; name: 'DatetimeFilter'; ofType: null; }; defaultValue: null }, { name: 'userEmails'; type: { kind: 'INPUT_OBJECT'; name: 'UserToManyUserEmailFilter'; ofType: null; }; defaultValue: null }, { name: 'userEmailsExist'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'userAuthentications'; type: { kind: 'INPUT_OBJECT'; name: 'UserToManyUserAuthenticationFilter'; ofType: null; }; defaultValue: null }, { name: 'userAuthenticationsExist'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'videos'; type: { kind: 'INPUT_OBJECT'; name: 'UserToManyVideoFilter'; ofType: null; }; defaultValue: null }, { name: 'videosExist'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'and'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'UserFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'or'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'UserFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'not'; type: { kind: 'INPUT_OBJECT'; name: 'UserFilter'; ofType: null; }; defaultValue: null }]; };
    'UserOrderBy': { name: 'UserOrderBy'; enumValues: 'NATURAL' | 'PRIMARY_KEY_ASC' | 'PRIMARY_KEY_DESC' | 'ID_ASC' | 'ID_DESC' | 'USERNAME_ASC' | 'USERNAME_DESC'; };
    'UserPatch': { kind: 'INPUT_OBJECT'; name: 'UserPatch'; isOneOf: false; inputFields: [{ name: 'username'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'avatarUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'UserToManyUserAuthenticationFilter': { kind: 'INPUT_OBJECT'; name: 'UserToManyUserAuthenticationFilter'; isOneOf: false; inputFields: [{ name: 'every'; type: { kind: 'INPUT_OBJECT'; name: 'UserAuthenticationFilter'; ofType: null; }; defaultValue: null }, { name: 'some'; type: { kind: 'INPUT_OBJECT'; name: 'UserAuthenticationFilter'; ofType: null; }; defaultValue: null }, { name: 'none'; type: { kind: 'INPUT_OBJECT'; name: 'UserAuthenticationFilter'; ofType: null; }; defaultValue: null }]; };
    'UserToManyUserEmailFilter': { kind: 'INPUT_OBJECT'; name: 'UserToManyUserEmailFilter'; isOneOf: false; inputFields: [{ name: 'every'; type: { kind: 'INPUT_OBJECT'; name: 'UserEmailFilter'; ofType: null; }; defaultValue: null }, { name: 'some'; type: { kind: 'INPUT_OBJECT'; name: 'UserEmailFilter'; ofType: null; }; defaultValue: null }, { name: 'none'; type: { kind: 'INPUT_OBJECT'; name: 'UserEmailFilter'; ofType: null; }; defaultValue: null }]; };
    'UserToManyVideoFilter': { kind: 'INPUT_OBJECT'; name: 'UserToManyVideoFilter'; isOneOf: false; inputFields: [{ name: 'every'; type: { kind: 'INPUT_OBJECT'; name: 'VideoFilter'; ofType: null; }; defaultValue: null }, { name: 'some'; type: { kind: 'INPUT_OBJECT'; name: 'VideoFilter'; ofType: null; }; defaultValue: null }, { name: 'none'; type: { kind: 'INPUT_OBJECT'; name: 'VideoFilter'; ofType: null; }; defaultValue: null }]; };
    'VerifyEmailInput': { kind: 'INPUT_OBJECT'; name: 'VerifyEmailInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'userEmailId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UUID'; ofType: null; }; }; defaultValue: null }, { name: 'token'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'VerifyEmailPayload': { kind: 'OBJECT'; name: 'VerifyEmailPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'query': { name: 'query'; type: { kind: 'OBJECT'; name: 'Query'; ofType: null; } }; 'result': { name: 'result'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; }; };
    'Video': { kind: 'OBJECT'; name: 'Video'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Datetime'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UUID'; ofType: null; }; } }; 'nodeId': { name: 'nodeId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'signedVideoUrl': { name: 'signedVideoUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Datetime'; ofType: null; }; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; 'userId': { name: 'userId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UUID'; ofType: null; }; } }; 'videoUrl': { name: 'videoUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'VideoCondition': { kind: 'INPUT_OBJECT'; name: 'VideoCondition'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'UUID'; ofType: null; }; defaultValue: null }, { name: 'userId'; type: { kind: 'SCALAR'; name: 'UUID'; ofType: null; }; defaultValue: null }, { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'Datetime'; ofType: null; }; defaultValue: null }, { name: 'updatedAt'; type: { kind: 'SCALAR'; name: 'Datetime'; ofType: null; }; defaultValue: null }]; };
    'VideoConnection': { kind: 'OBJECT'; name: 'VideoConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'VideoEdge'; ofType: null; }; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Video'; ofType: null; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'VideoEdge': { kind: 'OBJECT'; name: 'VideoEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'SCALAR'; name: 'Cursor'; ofType: null; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'Video'; ofType: null; } }; }; };
    'VideoFilter': { kind: 'INPUT_OBJECT'; name: 'VideoFilter'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'INPUT_OBJECT'; name: 'UUIDFilter'; ofType: null; }; defaultValue: null }, { name: 'videoUrl'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'title'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilter'; ofType: null; }; defaultValue: null }, { name: 'userId'; type: { kind: 'INPUT_OBJECT'; name: 'UUIDFilter'; ofType: null; }; defaultValue: null }, { name: 'createdAt'; type: { kind: 'INPUT_OBJECT'; name: 'DatetimeFilter'; ofType: null; }; defaultValue: null }, { name: 'updatedAt'; type: { kind: 'INPUT_OBJECT'; name: 'DatetimeFilter'; ofType: null; }; defaultValue: null }, { name: 'user'; type: { kind: 'INPUT_OBJECT'; name: 'UserFilter'; ofType: null; }; defaultValue: null }, { name: 'and'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'VideoFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'or'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'VideoFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'not'; type: { kind: 'INPUT_OBJECT'; name: 'VideoFilter'; ofType: null; }; defaultValue: null }]; };
    'VideoInput': { kind: 'INPUT_OBJECT'; name: 'VideoInput'; isOneOf: false; inputFields: [{ name: 'videoUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'userId'; type: { kind: 'SCALAR'; name: 'UUID'; ofType: null; }; defaultValue: null }]; };
    'VideoOrderBy': { name: 'VideoOrderBy'; enumValues: 'NATURAL' | 'PRIMARY_KEY_ASC' | 'PRIMARY_KEY_DESC' | 'ID_ASC' | 'ID_DESC' | 'USER_ID_ASC' | 'USER_ID_DESC' | 'CREATED_AT_ASC' | 'CREATED_AT_DESC' | 'UPDATED_AT_ASC' | 'UPDATED_AT_DESC'; };
    'VideoPatch': { kind: 'INPUT_OBJECT'; name: 'VideoPatch'; isOneOf: false; inputFields: [{ name: 'videoUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
};

/** An IntrospectionQuery representation of your schema.
 *
 * @remarks
 * This is an introspection of your schema saved as a file by GraphQLSP.
 * It will automatically be used by `gql.tada` to infer the types of your GraphQL documents.
 * If you need to reuse this data or update your `scalars`, update `tadaOutputLocation` to
 * instead save to a .ts instead of a .d.ts file.
 */
export type introspection = {
  name: never;
  query: 'Query';
  mutation: 'Mutation';
  subscription: never;
  types: introspection_types;
};

import * as gqlTada from 'gql.tada';

declare module 'gql.tada' {
  interface setupSchema {
    introspection: introspection
  }
}